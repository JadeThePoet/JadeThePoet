import time
import random
from .api_client import XAPIClient

class PoemScheduler:
    def __init__(self, poem_generator):
        self.api_client = XAPIClient()
        self.poem_generator = poem_generator
        self.posting_interval = 3600  # 1 hour

    def start(self):
        self.api_client.authenticate()
        print("Starting poem scheduler...")

        while True:
            try:
                poem = self.poem_generator.generate_poem()
                response = self.api_client.post_poem(poem)

                if response["success"]:
                    post_id = response["id"]
                    print(f"Poem posted successfully. Post ID: {post_id}")

                    # Wait for some engagement
                    time.sleep(random.randint(300, 900))  # 5-15 minutes

                    stats = self.api_client.get_engagement_stats(post_id)
                    print(f"Engagement stats for post {post_id}:")
                    print(f"Likes: {stats['likes']}, Reposts: {stats['reposts']}, Comments: {stats['comments']}")

                else:
                    print("Failed to post poem. Retrying in 5 minutes...")
                    time.sleep(300)

            except Exception as e:
                print(f"Error occurred: {str(e)}")
                print("Waiting for 15 minutes before retrying...")
                time.sleep(900)

            # Wait for the next posting interval
            time.sleep(self.posting_interval)

    def set_posting_interval(self, interval):
        self.posting_interval = interval
        print(f"Posting interval set to {interval} seconds")

# Dummy poem generator for demonstration
class DummyPoemGenerator:
    def generate_poem(self):
        return "This is a beautiful poem\nGenerated by Jade The Poet\nAI at its finest"

# Usage example
if __name__ == "__main__":
    poem_generator = DummyPoemGenerator()
    scheduler = PoemScheduler(poem_generator)
    scheduler.set_posting_interval(60)  # Set to 1 minute for demonstration
    scheduler.start()
